# Generated by Django 3.1.8 on 2021-05-29 14:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import fin.models.ticker.ticker


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('currency', models.CharField(choices=[('UAH', 'Ukrainian Hryvnia'), ('USD', 'United States Dollar'), ('EUR', 'Euro')], max_length=3)),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
            ],
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('data_source_url', models.URLField(choices=[('https://amplifyetfs.com/Data/Feeds/ForesideAmplify.40XL.XL_Holdings.csv', 'IBUY'), ('https://www.ishares.com/us/products/239516/ishares-us-medical-devices-etf/1467271812596.ajax', 'IHI'), ('https://www.ishares.com/us/products/239724/ishares-core-sp-total-us-stock-market-etf/1467271812596.ajax', 'ITOT'), ('https://www.ishares.com/us/products/244048/ishares-core-msci-total-international-stock-etf/1467271812596.ajax', 'IXUS'), ('http://invescopowershares.com/products/overview.aspx?ticker=PBW', 'PBW'), ('https://www.ishares.com/us/products/239714/ishares-russell-3000-etf/1467271812596.ajax', 'RUSSEL3000'), ('https://www.ishares.com/us/products/239705/ishares-phlx-semiconductor-etf/1467271812596.ajax', 'SOXX')], unique=True)),
                ('status', models.IntegerField(choices=[(0, 'Successfully Updated'), (1, 'Updating'), (2, 'Update Failed')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='IndexTicker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('raw_data', models.JSONField(default=dict)),
                ('weight', models.DecimalField(decimal_places=10, max_digits=19, validators=[django.core.validators.MinValueValidator(1e-06), django.core.validators.MaxValueValidator(1.000001)])),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Successfully Updated'), (1, 'Updating'), (2, 'Update Failed')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('asset_to_equity_max_ratio', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
                ('asset_to_equity_min_ratio', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
                ('debt_to_equity_max_ratio', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
                ('max_dividend_payout_ratio', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
                ('minimum_annual_earnings_growth', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
                ('pe_quantile', models.IntegerField(default=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioTicker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(default='Unknown', max_length=100)),
                ('country', models.CharField(default='Unknown', max_length=50)),
                ('industry', models.CharField(default='Unknown', max_length=50)),
                ('market_cap', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('pe', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=19)),
                ('sector', models.CharField(default='Unknown', max_length=50)),
                ('stock_exchange', models.CharField(default='Unknown', max_length=100)),
                ('symbol', models.CharField(max_length=100)),
            ],
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('outdated_tickers', fin.models.ticker.ticker.OutdatedTickersManager()),
            ],
        ),
        migrations.CreateModel(
            name='TickerStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('capital_lease_obligations', 'Capital Lease Obligations'), ('net_income', 'Net Income'), ('outstanding_shares', 'Outstanding Shares'), ('price', 'Price'), ('short_term_debt', 'Short Term Debt'), ('total_assets', 'Total Assets'), ('total_long_term_debt', 'Total Long Term Debt'), ('total_revenue', 'Total Revenue'), ('total_shareholder_equity', 'Total Shareholder Equity')], max_length=50)),
                ('fiscal_date_ending', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=19)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticker_statements', to='fin.ticker')),
            ],
        ),
        migrations.AddIndex(
            model_name='ticker',
            index=models.Index(fields=['company_name'], name='fin_ticker_company_e63386_idx'),
        ),
        migrations.AddIndex(
            model_name='ticker',
            index=models.Index(fields=['country'], name='fin_ticker_country_ce69e7_idx'),
        ),
        migrations.AddIndex(
            model_name='ticker',
            index=models.Index(fields=['industry'], name='fin_ticker_industr_fcc10f_idx'),
        ),
        migrations.AddIndex(
            model_name='ticker',
            index=models.Index(fields=['sector'], name='fin_ticker_sector_d03a15_idx'),
        ),
        migrations.AddIndex(
            model_name='ticker',
            index=models.Index(fields=['symbol'], name='fin_ticker_symbol_dcd8b8_idx'),
        ),
        migrations.AddConstraint(
            model_name='ticker',
            constraint=models.CheckConstraint(check=models.Q(price__gt=0), name='ticker_price_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='ticker',
            constraint=models.UniqueConstraint(fields=('stock_exchange', 'symbol'), name='unique_stock_ex_ticker_combination'),
        ),
        migrations.AddField(
            model_name='portfolioticker',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to='fin.portfolio'),
        ),
        migrations.AddField(
            model_name='portfolioticker',
            name='ticker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_ticker', to='fin.ticker'),
        ),
        migrations.AddField(
            model_name='portfoliopolicy',
            name='portfolio',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_policy', to='fin.portfolio'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='tickers',
            field=models.ManyToManyField(through='fin.PortfolioTicker', to='fin.Ticker'),
        ),
    ]
